{"version":3,"sources":["Components/Item.js","Components/Gallery.js","App.js","index.js"],"names":["Item","_ref","title","posterPath","overview","config","original_min","poster_sizes","length","match","sources","map","size","value","react_default","a","createElement","srcSet","concat","base_url","media","key","poster_path","titleArray","split","className","splice","join","alt","Gallery","results","res","src_Components_Item","original_title","name","id","API_KEY","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","movies","tv","url","axios","get","response","data","images","secure_base_url","console","log","_context","t0","req","stateProp","returnObj","hasLoaded","setState","_context2","getConfig","getMovieDB","src_Components_Gallery","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.740b09ac.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Item.css\";\n\nconst Item = ({ title, posterPath, overview, config }) => {\n  // get minimum size to use original image\n  let original_min = config.poster_sizes[config.poster_sizes.length - 2];\n  original_min = original_min.match(/\\d+/g)[0];\n\n  // responsive sources for picture tag\n  const sources = config.poster_sizes.map(size => {\n    let value = size.match(/\\d+/g);\n\n    if (value === null) {\n      return (\n        <source\n          srcSet={`${config.base_url}${size}${posterPath}`}\n          media={`(min-width: ${original_min}px)`}\n          key={`${config.poster_path}${size}`}\n        />\n      );\n    } else {\n      return (\n        <source\n          srcSet={`${config.base_url}${size}${posterPath}`}\n          media={`(max-width: ${value}px)`}\n          key={`${config.poster_path}${size}`}\n        />\n      );\n    }\n  });\n\n  let titleArray = title.split(\" \");\n  const titleLim = 6;\n\n  return (\n    <div className=\"item\">\n      <h3>\n        {`${\n          titleArray.length > titleLim\n            ? titleArray.splice(0, titleLim).join(\" \") + \"...\"\n            : titleArray.join(\" \")\n        }`}\n      </h3>\n      <figure>\n        <picture>\n          {sources}\n          <img alt={`${title} poster.`} />\n        </picture>\n      </figure>\n      <p>\n        {`${overview\n          .split(\" \")\n          .splice(0, 15)\n          .join(\" \")}...`}\n      </p>\n    </div>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport Item from \"./Item\";\nimport \"./Gallery.css\";\n\nconst Gallery = ({ title, config, results }) => {\n  // results.forEach(i => console.log(i));\n  return (\n    <div className=\"gallery\">\n      <h2>{title}</h2>\n      <div className=\"item-container\">\n        {results.map(res => (\n          <Item\n            title={res.original_title || res.name}\n            key={res.id}\n            posterPath={res.poster_path}\n            overview={res.overview}\n            config={config}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nimport Gallery from \"./Components/Gallery\";\n\n/* APP: Make movie app using movie API and use figure+picture tags */\n// request demo\n// const request = `${MOVIEDB_URL}movie/550?api_key=${API_KEY}`;\n\nconst API_KEY = `2a82319c022ea8b7ada23b2e5f0b2a55`;\nconst MOVIEDB_URL = `https://api.themoviedb.org/3/`;\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      config: {},\n      movies: {},\n      tv: {}\n    };\n  }\n\n  // get API config, includes base url\n  // and image sizes for poster images\n  async getConfig() {\n    const url = `${MOVIEDB_URL}configuration?api_key=${API_KEY}`;\n    try {\n      const response = await axios.get(url);\n      // console.log(response);\n\n      return {\n        base_url: response.data.images.secure_base_url,\n        poster_sizes: response.data.images.poster_sizes\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieDB(req, stateProp) {\n    const url = `${MOVIEDB_URL}${req}?api_key=${API_KEY}`;\n\n    try {\n      const response = await axios.get(url);\n      // console.log(response);\n\n      const returnObj = {\n        [stateProp]: {\n          results: response.data.results,\n          hasLoaded: true\n        }\n      };\n\n      this.setState(returnObj);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async componentDidMount() {\n    const config = await this.getConfig();\n    this.setState({ config });\n\n    const MOVIES = `trending/movie/day`;\n    const TV = `trending/tv/day`;\n\n    this.getMovieDB(MOVIES, `movies`);\n    this.getMovieDB(TV, `tv`);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Now Trending</h1>\n        {this.state.movies.hasLoaded ? (\n          <Gallery\n            title=\"Trending Movies\"\n            config={this.state.config}\n            results={this.state.movies.results}\n          />\n        ) : (\n          <p>Loading movies...</p>\n        )}\n        {this.state.tv.hasLoaded ? (\n          <Gallery\n            title=\"Trending TV\"\n            config={this.state.config}\n            results={this.state.tv.results}\n          />\n        ) : (\n          <p>Loading tv...</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}